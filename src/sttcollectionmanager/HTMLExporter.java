/*
 * Copyright (C) 2016 August Enzelberger <augustenz+github@gmail.com> (https://github.com/augustenz)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package sttcollectionmanager;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JTable;
import javax.swing.table.TableModel;

/**
 *
 * August Enzelberger <augustenz+github@gmail.com> (https://github.com/augustenz)
 */
public class HTMLExporter {
    public void exportTable(JTable table, File file, String tableName) throws IOException {
        TableModel model = table.getModel();
        FileWriter out = new FileWriter(file);
        
        int columns=model.getColumnCount()-1;
        
        //if(tableName.equals("STT Crew Collection"))
        //    columns-=1;
            
        String HTML="<html>\n";
        HTML+="\t<head>\n";
        HTML+="\t\t<style>\n";
        HTML+="\t\t\t.sortable th  {\n" +
            "\t\t\t  cursor: pointer;\n" +
            "\t\t\t  cursor: hand;\n" +
            "\t\t\t}\n";
        HTML+="\t\t\t/* Up and Down Arrows */\n" +
            "\t\t\tth.descend:after{\n" +
            "\t\t\t	content: \"\\25B2\";\n" +
            "\t\t\t	}\n" +
            "\t\t\tth.ascend:after{\n" +
            "\t\t\t	content: \"\\25BC\";\n" +
            "\t\t\t	}\n";
        HTML+="\t\t</style>\n";
        HTML+="\t\t<title>"+tableName+" "+" - Generated by STT Collection Manager</title>\n";
        HTML+="		<script type=\"text/javascript\">\n" +
"			function sortTable(table, col, reverse) {\n" +
"				var tb = table.tBodies[0], // use `<tbody>` to ignore `<thead>` and `<tfoot>` rows\n" +
"				tr = Array.prototype.slice.call(tb.rows, 0), // put rows into array\n" +
"				i;\n" +
"				reverse = -((+reverse) || -1);\n" +
"				tr = tr.sort(function (a, b) { // sort rows\n" +
"                               var th = table.tHead, i;\n" +
"                               th && (th = th.rows[0]) && (th = th.cells);\n" +
"				if(reverse== -1) {\n" +
"					th[col].className = 'ascend';\n" +
"					i = th.length;\n" +
"					while (--i >= 0) (function (i) {\n" +
"						if(i != col) th[i].className = 'null';\n" +
"					}(i));\n" +
"				}\n" +
"				else {\n" +
"					th[col].className = 'descend';\n" +
"					i = th.length;\n" +
"					while (--i >= 0) (function (i) {\n" +
"						if(i != col) th[i].className = 'null';\n" +
"					}(i));\n" +
"				}\n" +
"				return reverse // `-1 *` if want opposite order\n" +
"					* (a.cells[col].textContent.trim() // using `.textContent.trim()` for test\n" +
"						.localeCompare(b.cells[col].textContent.trim(), undefined, {numeric: true})\n" +
"					   );\n" +
"				});\n" +
"				for(i = 0; i < tr.length; ++i) tb.appendChild(tr[i]); // append each row in order\n" +
"			}\n" +
"\n" +
"			function makeSortable(table) {\n" +
"				var th = table.tHead, i;\n" +
"				th && (th = th.rows[0]) && (th = th.cells);\n" +
"				if (th) i = th.length;\n" +
"				else return; // if no `<thead>` then do nothing\n" +
"				while (--i >= 0) (function (i) {\n" +
"					var dir = 1;\n" +
"					th[i].addEventListener('click', function () {sortTable(table, i, (dir = 1 - dir))});\n" +
"				}(i));\n" +
"			}\n" +
"\n" +
"			function makeAllSortable(parent) {\n" +
"				parent = parent || document.body;\n" +
"				var t = parent.getElementsByTagName('table'), i = t.length;\n" +
"				while (--i >= 0) makeSortable(t[i]);\n" +
"			}\n" +
"\n" +
"			window.onload = function () {makeAllSortable();};\n" +
"        </script>";
        HTML+="\n\t</head>\n";
        HTML+="\t<BODY>\n";
        HTML+="\t\t<font face=\"Arial\">\n";
        HTML+="\t\t\t<h1>"+tableName+" - Generated by <a href=https://github.com/augustenz/STT-Collection-Manager>STT Collection Manager</a></h1>\n";
        HTML+="\t\t\t<table border=\"1\" cellpadding=\"2\" cellspacing=\"0\" class=\"sortable\">\n";
        HTML+="\t\t\t\t<thead>\n";
        HTML+="\t\t\t\t\t<tr>\n";
        for(int i=0; i<columns; i++) {
            HTML+="\t\t\t\t\t\t<th>"+model.getColumnName(i)+"</th>\n";
        }
        HTML+="\t\t\t\t\t</tr>\n";
        HTML+="\t\t\t\t</thead>\n";
        
        if(!tableName.equals("STT Crew Collection")) {
            for(int i=0; i<model.getRowCount(); i++) {
                HTML+="\t\t\t\t<tr>\n";       
                for(int j=0; j < columns; j++) {
                    try {
                        if(model.getValueAt(i,12).toString().equals("true")) {
                            switch(model.getValueAt(i,3).toString()) {
                                case "1": HTML+="\t\t\t\t\t<td bgcolor=\"#9b9b9b\"><b>"+model.getValueAt(i,j).toString()+"</b></td>\n"; break;
                                case "2": HTML+="\t\t\t\t\t<td bgcolor=\"#50aa3c\"><b>"+model.getValueAt(i,j).toString()+"</b></td>\n"; break;
                                case "3": HTML+="\t\t\t\t\t<td bgcolor=\"#5aaaff\"><b>"+model.getValueAt(i,j).toString()+"</b></td>\n"; break;
                                case "4": HTML+="\t\t\t\t\t<td bgcolor=\"#aa2deb\"><b>"+model.getValueAt(i,j).toString()+"</b></td>\n"; break;
                                case "5": HTML+="\t\t\t\t\t<td bgcolor=\"#fdd26a\"><b>"+model.getValueAt(i,j).toString()+"</b></td>\n"; break;
                                default: HTML+="\t\t\t\t\t<td bgcolor=\"#ffffff\"><b>"+model.getValueAt(i,j).toString()+"</b></td>\n"; break;
                            }
                        }
                        else {
                            switch(model.getValueAt(i,3).toString()) {
                                case "1": HTML+="\t\t\t\t\t<td bgcolor=\"#9b9b9b\">"+model.getValueAt(i,j).toString()+"</td>\n"; break;
                                case "2": HTML+="\t\t\t\t\t<td bgcolor=\"#50aa3c\">"+model.getValueAt(i,j).toString()+"</td>\n"; break;
                                case "3": HTML+="\t\t\t\t\t<td bgcolor=\"#5aaaff\">"+model.getValueAt(i,j).toString()+"</td>\n"; break;
                                case "4": HTML+="\t\t\t\t\t<td bgcolor=\"#aa2deb\">"+model.getValueAt(i,j).toString()+"</td>\n"; break;
                                case "5": HTML+="\t\t\t\t\t<td bgcolor=\"#fdd26a\">"+model.getValueAt(i,j).toString()+"</td>\n"; break;
                                default: HTML+="\t\t\t\t\t<td bgcolor=\"#ffffff\">"+model.getValueAt(i,j).toString()+"</td>\n"; break;
                            }
                        }
                    }
                    catch (NullPointerException ex) {
                        System.out.println("Cell("+i+":"+j+")=null");
                    }
                }
                HTML+="\t\t\t\t</tr>\n";
            }
        } else if(tableName.equals("STT Crew Collection")) {
            //columns-=1;
            for(int i=0; i<model.getRowCount(); i++) {
                HTML+="\t\t\t\t<tr>\n";       
                for(int j=0; j < columns; j++) {
                    try {
                        switch(model.getValueAt(i,3).toString()) {
                            
                            case "1": {
                                if((j==6 || j==7) && model.getValueAt(i,j).toString().equals("false"))
                                    HTML+="\t\t\t\t\t<td bgcolor=\"#9b9b9b\">No</td>\n";
                                else if((j==6 || j==7) && model.getValueAt(i,j).toString().equals("true"))
                                    HTML+="\t\t\t\t\t<td bgcolor=\"#9b9b9b\">Yes</td>\n";
                                else
                                    HTML+="\t\t\t\t\t<td bgcolor=\"#9b9b9b\">"+model.getValueAt(i,j).toString()+"</td>\n";
                            } break;
                            
                            case "2": {
                                if((j==6 || j==7) && model.getValueAt(i,j).toString().equals("false"))
                                    HTML+="\t\t\t\t\t<td bgcolor=\"#50aa3c\">No</td>\n";
                                else if((j==6 || j==7) && model.getValueAt(i,j).toString().equals("true"))
                                    HTML+="\t\t\t\t\t<td bgcolor=\"#50aa3c\">Yes</td>\n";
                                else
                                    HTML+="\t\t\t\t\t<td bgcolor=\"#50aa3c\">"+model.getValueAt(i,j).toString()+"</td>\n";
                            } break;
                            
                            case "3": {
                                if((j==6 || j==7) && model.getValueAt(i,j).toString().equals("false"))
                                    HTML+="\t\t\t\t\t<td bgcolor=\"#5aaaff\">No</td>\n";
                                else if((j==6 || j==7) && model.getValueAt(i,j).toString().equals("true"))
                                    HTML+="\t\t\t\t\t<td bgcolor=\"#5aaaff\">Yes</td>\n";
                                else
                                    HTML+="\t\t\t\t\t<td bgcolor=\"#5aaaff\">"+model.getValueAt(i,j).toString()+"</td>\n";
                            } break;
                            
                            case "4": {
                                if((j==6 || j==7) && model.getValueAt(i,j).toString().equals("false"))
                                    HTML+="\t\t\t\t\t<td bgcolor=\"#aa2deb\">No</td>\n";
                                else if((j==6 || j==7) && model.getValueAt(i,j).toString().equals("true"))
                                    HTML+="\t\t\t\t\t<td bgcolor=\"#aa2deb\">Yes</td>\n";
                                else
                                    HTML+="\t\t\t\t\t<td bgcolor=\"#aa2deb\">"+model.getValueAt(i,j).toString()+"</td>\n";
                            } break;
                            
                            case "5": {
                                if((j==6 || j==7) && model.getValueAt(i,j).toString().equals("false"))
                                    HTML+="\t\t\t\t\t<td bgcolor=\"#fdd26a\">No</td>\n";
                                else if((j==6 || j==7) && model.getValueAt(i,j).toString().equals("true"))
                                    HTML+="\t\t\t\t\t<td bgcolor=\"#fdd26a\">Yes</td>\n";
                                else
                                    HTML+="\t\t\t\t\t<td bgcolor=\"#fdd26a\">"+model.getValueAt(i,j).toString()+"</td>\n";
                            } break;
                            
                            default: {
                                HTML+="\t\t\t\t\t<td bgcolor=\"#ffffff\">"+model.getValueAt(i,j).toString()+"</td>\n";
                            } break;
                        }
                    }
                    catch (NullPointerException ex) {
                        System.out.println("Cell("+i+":"+j+")=null");
                    }
                }
                HTML+="\t\t\t\t</tr>\n";
            }
        }

        HTML+="\t\t\t</table>\n";
        HTML+="\t\t</font>\n";
        HTML+="\t</BODY>\n";
        HTML+="</HTML>\n";

        out.write(HTML);
        out.close();
        System.out.println("write out to: " + file);
    }
}
